package theory.interfaces;

/*
Отличие default от static методов в интерфейсе в том, что 
static-методы переопределять нельзя, а default-методы можно, но необязательно.

Вообще, static-методы обычно используются как вспомогательные для дефолтных,
хотя и не всегда. Иногда static-методы всё-таки нужны для использования вне
интерфейса, но только тогда, когда переопределение точно не будет нужно.

Но с java 9 появились ещё приватные (private) методы в интерфейсах!
Модификатор private помогает сокрыть дефолтные и статические методы, которые 
помогают другим дефолтным и статическим методам и не должны быть использованы извне.

Но что же будет, если класс реализует два интерфейса, а в этих интерфейсах есть одинаковый
дефолтный метод? В таком случае компилятор выбросит ошибку. Как её исправить?
Нужно переопределить такой метод вот и всё =).
*/

public interface Numbers {

    default void printIncreasedNumber(int number){
        System.out.println("default-метод начал свою работу!");
        System.out.println("Выводится увеличенное число на экран: " + increaseNumber(number));
    }

    static int increaseNumber(int number){
        System.out.println("static-метод начал свою работу!");
        return number + 1;
    }

    /*
    С java 9 можно сделать так:
  
    private int reduceNumber(int number){
        return number + 1;
    }
    */
}
