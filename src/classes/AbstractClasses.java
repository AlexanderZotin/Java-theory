package theory.classes;

/*
Абстрактный класс - это некий "чертёж", какая-то общая сущность.
Абстрактный класс помечается словом abstract. Создать объект
абстрактного класса нельзя: его смысл в том, что от него нужно наследоваться
и реализовывать все его абстрактные методы.
Такой класс немного похож на интерфейс: он тоже содержит методы без тела.
Но он всё же отличается от интерфейса. Вот главные отличия:

1) Интерфейс содержит только методы без тела, а абстрактный класс
может содержать как и абстрактные методы(методы без тела, помечаются словом abstract),
так и обычные методы, в которых уже есть реализация;

2) Все поля интерфейса - public static final. У абстрактного класса
могут быть поля с любыми модификаторами доступа;

3) Интерфейсы реализуются (implements), а абстрактные классы расширяются
(extends). Можно имплементировать сколько угодно интерфейсов, а унаследовать
можно только один абстрактный класс;

4) Абстрактный класс - это то, чем классы-наследники являются,
а интерфейс - некий контракт, то, что класс умеет делать.
Абстрактным классом могут быть связаны похожие случаи: коты и собаки(животные),
а интерфейсом - сущности вообще разные: самолёт, птица, Карлсон, 
пушинка и комар(они все умеют летать);

*/

public class AbstractClasses {

    public static void main (String [] args) {
        Dog dog = new Dog();
	    dog.setColor("Коричневый");
	    System.out.println("Цвет собаки dog: " + dog.getColor());
	    dog.voice();
	    Cat cat = new Cat("Чёрный");
	    System.out.println("Изначальный цвет кота cat: " + cat.getColor());
	    cat.setColor("Белый");
	    System.out.println("Новый цвет кота cat: " + cat.getColor());
	    cat.voice();
    }
}