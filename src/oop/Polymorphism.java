package theory.oop;

/*
Полиморфизм - один из трёх основных принципов ООП. Полиморфизм - это способность
метода обрабатывать данные разных типов. В некоторых случаях полиморфизм существенно позволяет 
сократить код. 
*/
public class Polymorphism {

    public static void main (String [] args) {
        Thing thing1 = new Paper(); 
        //Данная запись возможна, так как Paper наследуется от Thing.
        System.out.println("Вызывается метод use() на объект thing1: ");
        thing1.use(); 
        //Вызовется переопределённый метод (в классе Paper есть переопределённый метод use
     
        Thing thing2 = new Pencil();
        System.out.println("Вызывается метод use() на объект thing2: ");
        thing2.use(); 
        //Вызовется метод класса-родителя (переопределённого метода use() в классе Pencil нет
       
        /*
        На такие "смешанные" объекты можно вызывать только переопределённые методы родительского класса.
        Вызов собственного метода класса недопустим.
        Для этого нужно создать полноценный объект нужного класса
        */
     
        //А вот полиморфизм как способность метода обрабатывать данные разных типов:
        Paper paper = new Paper();
        Pencil pencil = new Pencil();
        callMethod(paper); //Мы можем так сделать, ведь Paper наследуется от Thing.
        callMethod(pencil); 
    }
  
    public static void callMethod(Thing thing){
        System.out.println("Вызывается метод use() на объект, пришедший в параметрах: ");
        thing.use();
    }
  
}